{"version":3,"sources":["assets/crypto.png","hooks/useCurrency.js","hooks/useCrypto.js","components/Error.js","components/Form.js","components/Quote.js","components/Spinner.js","App.js","index.js"],"names":["Label","styled","label","Select","select","useCurrency","initialState","options","useState","state","setState","onChange","e","target","value","map","option","code","name","useCrypto","CoinInfo","Name","FullName","Id","ErrorMessage","p","Error","message","Button","button","Form","setCurrency","setCrypto","cryptoList","setCryptoList","error","setError","currency","SelectCurrency","crypto","SelectCrypto","useEffect","a","axios","get","result","data","Data","fetchAPI","onSubmit","preventDefault","type","ResultDiv","div","Info","Price","Quote","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Container","Image","img","Heading","h1","App","setResult","loading","setLoading","url","setTimeout","DISPLAY","quoteCrypto","component","src","image","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a697869a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/crypto.51f1d2ed.png\";","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Fira Code\", monospace;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 1.8rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  --webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useCurrency = (label, initialState, options) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const SelectCurrency = () => (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Select onChange={(e) => setState(e.target.value)} value={state}>\r\n        <option value=\"\">- Select -</option>\r\n        {options.map((option) => (\r\n          <option key={option.code} value={option.code}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n  return [state, SelectCurrency, setState];\r\n};\r\n\r\nexport default useCurrency;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Label = styled.label`\r\n  font-family: \"Fira Code\", monospace;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 1.8rem;\r\n  margin-top: 2rem;\r\n  display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 1rem;\r\n  --webkit-appearance: none;\r\n  border-radius: 10px;\r\n  border: none;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst useCrypto = (label, initialState, options) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const SelectCrypto = () => (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Select onChange={(e) => setState(e.target.value)} value={state}>\r\n        <option value=\"\">- Select -</option>\r\n        {options.map((option) => (\r\n          <option key={option.CoinInfo.Id} value={option.CoinInfo.Name}>\r\n            {option.CoinInfo.FullName}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </>\r\n  );\r\n  return [state, SelectCrypto, setState];\r\n};\r\n\r\nexport default useCrypto;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst ErrorMessage = styled.p`\r\n  background-color: #b7322c;\r\n  color: #fff;\r\n  font-family: \"Fira Code\", monospace;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst Error = ({ message }) => {\r\n  return <ErrorMessage>{message}</ErrorMessage>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport useCurrency from \"../hooks/useCurrency\";\r\nimport useCrypto from \"../hooks/useCrypto\";\r\nimport Error from \"./Error\";\r\n\r\nconst Button = styled.button`\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  background-color: #66a2fe;\r\n  border: none;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #326ac0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Form = ({ setCurrency, setCrypto }) => {\r\n  const [cryptoList, setCryptoList] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const CURRENCY = [\r\n    { code: \"USD\", name: \"US Dollar\" },\r\n    { code: \"MXN\", name: \"Peso Mexicano\" },\r\n    { code: \"EUR\", name: \"Euro\" },\r\n    { code: \"ARG\", name: \"Peso Argentino\" },\r\n  ];\r\n  const [currency, SelectCurrency] = useCurrency(\"Currency pick\", \"\", CURRENCY);\r\n  const [crypto, SelectCrypto] = useCrypto(\"Crypto pick\", \"\", cryptoList);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const url =\r\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\r\n      const result = await axios.get(url);\r\n      setCryptoList(result.data.Data);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const quoteCurrency = (e) => {\r\n    e.preventDefault();\r\n    if (currency === \"\" || crypto === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n    setError(false);\r\n    setCurrency(currency);\r\n    setCrypto(crypto);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={quoteCurrency}>\r\n      {error ? <Error message=\"All fields are required\" /> : null}\r\n      <SelectCurrency />\r\n      <SelectCrypto />\r\n      <Button type=\"submit\">Calculate</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst ResultDiv = styled.div`\r\n  color: #fff;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n  font-size: 18px;\r\n\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Price = styled.p`\r\n  font-size: 30px;\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Quote = ({ result }) => {\r\n  if (Object.keys(result).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ResultDiv>\r\n      <Price>\r\n        The price is: <span>{result.PRICE}</span>\r\n      </Price>\r\n      <Info>\r\n        Highest price of the day: <span>{result.HIGHDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        Lowest price of the day: <span>{result.LOWDAY}</span>\r\n      </Info>\r\n      <Info>\r\n        Variation last 24 hours: <span>{result.CHANGEPCT24HOUR}</span>\r\n      </Info>\r\n      <Info>\r\n        Last update: <span>{result.LASTUPDATE}</span>\r\n      </Info>\r\n    </ResultDiv>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-cube-grid\">\r\n      <div className=\"sk-cube sk-cube1\"></div>\r\n      <div className=\"sk-cube sk-cube2\"></div>\r\n      <div className=\"sk-cube sk-cube3\"></div>\r\n      <div className=\"sk-cube sk-cube4\"></div>\r\n      <div className=\"sk-cube sk-cube5\"></div>\r\n      <div className=\"sk-cube sk-cube6\"></div>\r\n      <div className=\"sk-cube sk-cube7\"></div>\r\n      <div className=\"sk-cube sk-cube8\"></div>\r\n      <div className=\"sk-cube sk-cube9\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport styled from \"@emotion/styled\";\r\nimport image from \"./assets/crypto.png\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Form from \"./components/Form\";\r\nimport Quote from \"./components/Quote\";\r\nimport Spinner from \"./components/Spinner\";\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  @media (min-width: 992px) {\r\n    column-gap: 2rem;\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  margin-top: 5rem;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  color: #fff;\r\n  font-family: \"Fira Code\", monospace;\r\n  font-size: 50px;\r\n  font-weight: 700;\r\n  margin-bottom: 50px;\r\n  margin-top: 80px;\r\n  text-align: left;\r\n\r\n  &::after {\r\n    background-color: #66a2fe;\r\n    content: \"\";\r\n    display: block;\r\n    height: 6px;\r\n    margin: 5px;\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [currency, setCurrency] = useState(\"\");\r\n  const [crypto, setCrypto] = useState(\"\");\r\n  const [result, setResult] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const quoteCrypto = async () => {\r\n      if (currency === \"\") {\r\n        return;\r\n      }\r\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${crypto}&tsyms=${currency}`;\r\n      const result = await axios.get(url);\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setResult(result.data.DISPLAY[crypto][currency]);\r\n      }, 2000);\r\n    };\r\n    quoteCrypto();\r\n  }, [currency, crypto]);\r\n\r\n  const component = loading ? <Spinner /> : <Quote result={result} />;\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Image src={image} alt=\"Crypto image background\" />\r\n      </div>\r\n      <div>\r\n        <Heading>Crypto finder</Heading>\r\n        <Form setCrypto={setCrypto} setCurrency={setCurrency} />\r\n        {component}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}